<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Caskanje</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.css" integrity="sha512-UrjLcAek5jbj1vwGbXkviPHtgSNVNQCedX7cBIMDdSI2iZtUcZcoTh2Sqc8R9mVcijOjFUi1IlxhfrE1uWaIog==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        .chatbox {
            outline: 1px solid silver;
            min-height: 160px;
            padding: 0.5em;
        }
    </style>
</head>
<body>
<div class="container">
    <div class="row">
        <div class="col">
            <h1 class="mt-3">Ovo je stranica za ćaskanje</h1>
            <hr>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            
            
            <div class="form-group">
                <label for="username">Korisnik:</label>
                <input type="text" name="username" id="username" class="form-control" autocomplete="off">
            </div>

            <div class="form-group">
                <label for="message">Poruka:</label>
                <input type="text" name="message" id="message" class="form-control" autocomplete="off">
            </div>

            <hr>
            <a href="javascript:void(0);" class="btn btn-outline-secondary" id="sendBtn">Pošalji poruku</a>

            <input type="hidden" name="action" id="action">

            <div id="status" class="mt-2 float-end">

            </div>

            <div id="output" class="chatbox mt-3">

            </div>
        </div>
        <div class="col-md-4">
            <h3>Ko je na vezi:</h3>
            <ul id="online_users">

            </ul>
        </div>
    </div>
</div>
</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.js" integrity="sha512-NHRCwRf2LnVSlLDejCA9oS3fG3/FLSQIPCjAWl3M7tVi5wszwr6FxkjotWnQDXLE+aLKcxRrzFDNEgXj9nvkPw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script src="/static/reconnecting-websocket.min.js"></script>

<script>
    let socket = null;
    let o = document.getElementById("output");
    let userField = document.getElementById("username");
    let messageField = document.getElementById("message");

    window.onbeforeunload = function() {
        console.log("Leaving");
        let jsonData = {};
        jsonData["action"] = "left";
        socket.send(JSON.stringify(jsonData))
    }

    document.addEventListener("DOMContentLoaded", function () {
        socket = new ReconnectingWebSocket("ws://192.168.29.68:8080/ws", null, {debug: true, reconectInterval: 3000});

        const offline = `<span class="badge bg-danger">Neaktivan</span>`
        const online = `<span class="badge bg-success">Aktivan</span>`
        let statusDiv = document.getElementById("status");

        socket.onopen = () => {
            console.log("Successfully connected");
            statusDiv.innerHTML = online;
        }

        socket.onclose = () => {
            console.log("connection closed");
            statusDiv.innerHTML = offline;
        }

        socket.onerror = error => {
            console.log("there was an error");
            statusDiv.innerHTML = offline;
        }

        socket.onmessage = msg => {
           // console.log(msg);
           // let j = JSON.parse(msg.data);
           // console.log(j);

           let data = JSON.parse(msg.data);
            console.log("Action is", data.action);

            switch (data.action) {
                case "list_users":
                    let ul = document.getElementById("online_users");
                    while (ul.firstChild) ul.removeChild(ul.firstChild);

                    if (data.connected_users.length > 0) {
                        data.connected_users.forEach(function (item) {
                            let li = document.createElement("li");
                            li.appendChild(document.createTextNode(item));
                            ul.appendChild(li);
                        })
                    }
                    break;
                case "broadcast":
                    o.innerHTML = o.innerHTML + data.message + "<br>";
                    break;
            }

        }

        
        userField.addEventListener("change", function () {
            let jsonData = {};
            jsonData["action"] = "username";
            jsonData["username"] = this.value;
            socket.send(JSON.stringify(jsonData));
        })

        messageField.addEventListener("keydown", function (event) {
            if (event.code === "Enter") {
                if (!socket) {
                    console.log("no connection");
                    return false
                }

                if ((userField.value === "") || (messageField.value === "")) {
                    errorMessage("Unesi korisnika i poruku!");
                    return false;
                } else {
                    sendMessage()
                }

                event.preventDefault();
                event.stopPropagation();
                
            }
        })

        document.getElementById("sendBtn").addEventListener("click", function() {
            if ((userField.value === "") || (messageField.value === "")) {
                errorMessage("Unesi korisnika i poruku!");
                return false;
            } else {
                sendMessage()
            }
        })

    })

    function sendMessage() {
        let jsonData = {};
        jsonData["action"] = "broadcast";
        jsonData["username"] = userField.value;
        jsonData["message"] = messageField.value;
        socket.send(JSON.stringify(jsonData))
        messageField.value = "";
    }
    function errorMessage(msg) {
        notie.alert({
            type: 'error',
            text: msg,
        })
    }
</script>
</html>